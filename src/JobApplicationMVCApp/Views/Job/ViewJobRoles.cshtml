@model IEnumerable<JobApplicationMVCApp.Models.JobPosting>
<!DOCTYPE html>
<html lang="en">
<head>
    <title>View Job Roles</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/govuk-frontend/govuk/all.min.css">
    <style>
    .container {
    margin-top: 1rem;
    }

    .content-wrapper {
    display: flex;
    gap: 1rem;
    }

    .filters-section {
    flex: 1;
    max-width: 300px;
    min-width: 250px;
    background-color: #f3f2f1;
    padding: 1rem;
    border: 1px solid #b1b4b6;
    border-radius: 4px;
    max-height: max-content;
    }

    .filters-section .govuk-form-group {
    margin-bottom: 1rem; /* Consistent spacing between elements */
    }

    .filters-section select {
    width: 100%; /* Full-width dropdowns */
    box-sizing: border-box; /* Prevents overflow issues */
    }

    .jobs-section {
    flex: 3;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    padding: 1rem;
    padding-top: 0;
    margin-top: 0;
   /* Adds spacing between job cards */
    }

    .header-section {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0 0 1rem 0; /* Reduces whitespace below the header */
    padding: 0; /* Removes any default padding */
    }

    .header-section .jobs-count {
    margin: 0; /* Removes unnecessary margin */
    font-size: 1.5rem;
    font-weight: 600;
    color: #333; /* Darker text for better readability */
    }

    .sort-by-form {
    display: flex;
    align-items: center;
    gap: 1rem; /* Adds spacing between dropdown and button */
        max-height: 60px;
    }

    .govuk-button {
    display: inline-block;
    padding: 10px 20px;
    font-size: 16px;
    text-align: center;
    margin-top: 10px; /* Adds spacing above buttons */
    }

    .job-card {
    border: 1px solid #dcdcdc;
    padding: 1rem;
    border-radius: 5px;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Adds subtle shadow for separation */
    margin-bottom: 1.5rem; /* Adds spacing between job cards */
    }

    .job-card-header {
    display: flex;
    align-items: center;
    margin-bottom: 0.5rem;
        
    }

    .job-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .job-title-location {
        display: flex;
        gap: 0.5rem; /* Adds slight spacing between title and location */
    }

    .job-title {
        font-weight: bold;
    }

    .job-location {
        font-style: italic;
        color: #555; /* Subtle color for distinction */
    }

    .job-closing-date {
        color: #6c757d;
        font-size: 0.9rem;
        text-align: right; /* Ensures alignment to the right */
        flex-shrink: 0; /* Prevents the date from shrinking in flex layout */
    }

    .govuk-link:hover {
    cursor: pointer;
    }

    #applybtn {
    margin-top: 27px;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
    .content-wrapper {
    flex-direction: column;
    }

    .filters-section,
    .jobs-section {
    width: 100%;
    }
    }
</style>
</head>
<body>

<div class="govuk-width-container">
    <!-- Back Link -->
    @Html.ActionLink("Back", "AdminHomepage", "Home", null, new { @class = "govuk-back-link" })

    <div class="container">
        <h1 class="govuk-heading-l">View Job Roles</h1>

        <div class="content-wrapper">
            <!-- Filters Section -->
            <form method="get" action="/Job/ViewJobRoles" class="filters-section">
                <h2 class="govuk-heading-m">Filter by</h2>

                <!-- Hidden input for sort -->
                <input type="hidden" name="sort" value="@ViewData["SortBy"]" />

                <!-- Location Dropdown -->
                <div class="govuk-form-group">
                    <label for="location" class="govuk-label">Location</label>
                    <select id="location" name="location" class="govuk-select">
                        @foreach (var loc in new[] { "All", "London", "Birmingham", "Manchester", "Edinburgh", "Derry", "Bristol" })
                        {
                        if (ViewData["SelectedLocation"]?.ToString() == loc)
                        {
                        <option value="@loc" selected>@loc</option>
                        }
                        else
                        {
                        <option value="@loc">@loc</option>
                        }
                        }
                    </select>
                </div>

                <!-- Department Dropdown -->
                <div class="govuk-form-group">
                    <label for="department" class="govuk-label">Department</label>
                    <select id="department" name="department" class="govuk-select">
                        @foreach (var dept in new[] { "All", "IT", "HR", "Finance" })
                        {
                        if (ViewData["SelectedDepartment"]?.ToString() == dept)
                        {
                        <option value="@dept" selected>@dept</option>
                        }
                        else
                        {
                        <option value="@dept">@dept</option>
                        }
                        }
                    </select>
                </div>

                <!-- Status Dropdown -->
                <div class="govuk-form-group">
                    <label for="status" class="govuk-label">Status</label>
                    <select id="status" name="status" class="govuk-select">
                        @foreach (var stat in new[] { "All", "Open", "Closed" })
                        {
                        if (ViewData["SelectedStatus"]?.ToString() == stat)
                        {
                        <option value="@stat" selected>@stat</option>
                        }
                        else
                        {
                        <option value="@stat">@stat</option>
                        }
                        }
                    </select>
                </div>

                <!-- Type Dropdown -->
                <div class="govuk-form-group">
                    <label for="type" class="govuk-label">Type</label>
                    <select id="type" name="type" class="govuk-select">
                        @foreach (var typ in new[] { "All", "Full-time", "Part-time" })
                        {
                        if (ViewData["SelectedType"]?.ToString() == typ)
                        {
                        <option value="@typ" selected>@typ</option>
                        }
                        else
                        {
                        <option value="@typ">@typ</option>
                        }
                        }
                    </select>
                </div>

                <button type="submit" class="govuk-button govuk-!-margin-top-2" data-module="govuk-button">Apply Filters</button>
            </form>


            <!-- Jobs Section -->
            <div class="jobs-section">
                <div class="header-section" style="margin-bottom: 5px">
                    <h4 class="jobs-count">@Model.Count() Jobs Available</h4>
                    <form method="get" action="/Job/ViewJobRoles" class="sort-by-form">
                        <!-- Hidden inputs for filters -->
                        <input type="hidden" name="location" value="@ViewData["SelectedLocation"]" />
                        <input type="hidden" name="department" value="@ViewData["SelectedDepartment"]" />
                        <input type="hidden" name="status" value="@ViewData["SelectedStatus"]" />
                        <input type="hidden" name="type" value="@ViewData["SelectedType"]" />

                        <label for="sort" class="govuk-label">Sort by:</label>
                        <select id="sort" name="sort" class="govuk-select">
                            @foreach (var sort in new[] { "", "date-asc", "date-desc" })
                            {
                            var label = sort == "date-asc" ? "Date (Ascending)"
                            : sort == "date-desc" ? "Date (Descending)"
                            : "Select a Sort";
                            if (ViewData["SortBy"]?.ToString() == sort)
                            {
                            <option value="@sort" selected>@label</option>
                            }
                            else
                            {
                            <option value="@sort">@label</option>
                            }
                            }
                        </select>
                        <button type="submit" class="govuk-button govuk-button--secondary" id="applybtn">Apply</button>
                    </form>

                </div>

                <main class="govuk-main-wrapper" style="padding: 0">
                    @if (Model != null && Model.Any())
                    {
                    @foreach (var job in Model)
                    {
                    <div class="job-card">
                        <div class="job-card-header">
                            <!-- Job title and location -->
                            <div class="job-title-location">
                                
                                <span class="job-title">
                                    <a href="/Job/Details/id" class="govuk-link">@job.JobTitle</a>
                                </span>
                                <span>-</span>
                                <span class="job-location">@job.Location.LocationName</span>
                            </div>
                            <!-- Closing date aligned to the right -->
                            <div class="job-closing-date">
                                Closing Date: @job.ClosingDate.ToShortDateString()
                            </div>
                        </div>
                        <div>
                            <b>Department:</b> @job.Department.DepartmentName
                        </div>
                        <div>
                            <b>Description:</b> @job.JobDescription
                        </div>
                    </div>
                    }
                    }
                    else
                    {
                    <p>No job roles available.</p>
                    }
                </main>
            </div>
        </div>
    </div>
</div>

</body>
</html>
